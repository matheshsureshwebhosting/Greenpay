<!DOCTYPE html>
<html lang="en">

<!-- Mirrored from kanakku.dreamguystech.com/template-html/form-basic-inputs.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 02 Feb 2021 23:21:22 GMT -->

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
	<title>First Graduate Certificate</title>

	<!-- Favicon -->
	<link rel="shortcut icon" href="/public/img/favicon.png">

	<!-- Bootstrap CSS -->
	<link rel="stylesheet" href="/public/css/bootstrap.min.css">

	<!-- Fontawesome CSS -->
	<link rel="stylesheet" href="/public/plugins/fontawesome/css/fontawesome.min.css">
	<link rel="stylesheet" href="/public/plugins/fontawesome/css/all.min.css">

	<!-- Main CSS -->
	<link rel="stylesheet" href="/public/css/style.css">

	<link rel="stylesheet" href="/public/log/vendor/toaster/toaster/build/toastr.css">
    <script src="/public/log/vendor/jquery/jquery-3.2.1.min.js"></script>
    <script src="/public/log/vendor/toaster/toaster/build/toastr.min.js"></script>
    <script src="/public/js/toaster.js"></script>
</head>

<body>

	<!-- Main Wrapper -->
	<div class="main-wrapper">

		<%- include('partial/header'); %>

		<!-- Page Wrapper -->
		<div class="page-wrapper">
			<div class="content container-fluid">

				<!-- Page Header -->
				<div class="page-header">
					<div class="row">
						<div class="col">
							<h3 class="page-title">First Graduate Certificate</h3>
						</div>
					</div>
				</div>
				<!-- /Page Header -->

				<div class="row">
					<div class="col-lg-12">
						<div class="card">
							<div class="card-header">
								<h5 class="card-title">Upload Documents</h5>
								<div style="float: right;">
									<h5 class="card-title">Contact : 9952773574</h5><br>
									<h5 class="card-title">Price : Rs 60</h5>
								</div>
							</div>
							<div class="card-body">
								<div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Name</label>
										<div class="col-md-10">
											<input type="text" class="form-control" id="name">
											<div class="invalid-feedback" id="fbname">
												Please provide a valid Name.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Mobile Number</label>
										<div class="col-md-10">
											<input type="number" class="form-control" id="number">
											<div class="invalid-feedback" id="fbnumber">
												Please provide a valid Number.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Email Id</label>
										<div class="col-md-10">
											<input type="email" class="form-control" id="email">
											<div class="invalid-feedback" id="fbemail">
												Please provide a valid Email.
											</div>
										</div>
									</div>

									<div class="form-group row">
										<label class="col-form-label col-md-2">Photo</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="photo">
											<div class="invalid-feedback" id="fbphoto">
												Please provide a valid Photo.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Any Address Proof</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="address">
											<div class="invalid-feedback" id="fbaddress">
												Please provide a valid Address.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Applicant Transfer Certificate</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="transfer">
											<div class="invalid-feedback" id="fbtransfer">
												Please provide a valid Transfer.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Self-Declaration of Father</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="father">
											<div class="invalid-feedback" id="fbfather">
												Please provide a valid Father.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Self-Declaration of Mother</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="mother">
											<div class="invalid-feedback" id="fbmother">
												Please provide a valid Mother.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Father Transfer Certificate</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="fathertransfer">
											<div class="invalid-feedback" id="fbfathertransfer">
												Please provide a valid Father Transfer.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Mother Transfer Certificate</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="mothertransfer">
											<div class="invalid-feedback" id="fbmothertransfer">
												Please provide a valid Mother Transfer.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Smart Card</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="smart">
											<div class="invalid-feedback" id="fbsmart">
												Please provide a valid Smart.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Self-Declaration of Applicant</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="self">
											<div class="invalid-feedback" id="fbself">
												Please provide a valid Self.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Current Academic year
											Certificates</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="academic">
											<div class="invalid-feedback" id="fbacademic">
												Please provide a valid Academic.
											</div>
										</div>
									</div>
									<div class="form-group row">
										<label class="col-form-label col-md-2">Others</label>
										<div class="col-md-10">
											<input class="form-control" type="file" id="others" multiple>
										</div>
									</div>
									<div class="form-group row justify-content-center">
										<button type="button" class="btn btn-primary btn-lg"
											id="submitbtn">Submit</button>
									</div>


								</div>
							</div>
						</div>

					</div>
				</div>

			</div>
		</div>
		<!-- /Page Wrapper -->

	</div>
	<!-- /Main Wrapper -->

	<script src="/public/js/main/jquery-3.5.1.min.js"></script>

	<!-- Bootstrap Core JS -->
	<script src="/public/js/main/popper.min.js"></script>
	<script src="/public/js/main/bootstrap.min.js"></script>

	<!-- Feather Icon JS -->
	<script src="/public/js/main/feather.min.js"></script>

	<!-- Slimscroll JS -->
	<script src="/public/plugins/slimscroll/jquery.slimscroll.min.js"></script>

	<!-- Select2 JS -->
	<script src="/public/plugins/select2/js/select2.min.js"></script>

	<!-- Datepicker Core JS -->
	<script src="/public/plugins/moment/moment.min.js"></script>
	<script src="/public/js/main/bootstrap-datetimepicker.min.js"></script>

	<!-- Custom JS -->
	<script src="/public/js/main/script.js"></script>
	<!-- The core Firebase JS SDK is always required and must be listed first -->
	<script src="https://www.gstatic.com/firebasejs/8.2.5/firebase.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
	<script src="/public/js/custom/firebase.js"></script>
	<script>
		var db = firebase.firestore()
		var storageRef = firebase.storage().ref();
		var uemail = localStorage.getItem("uemail")
		document.getElementById("submitbtn").addEventListener("click", async () => {			
			var name = document.getElementById("name").value
			var number = document.getElementById("number").value
			var email = document.getElementById("email").value
			var photo = document.getElementById("photo").files[0]
			var address = document.getElementById("address").files[0]
			var transfer = document.getElementById("transfer").files[0]
			var father = document.getElementById("father").files[0]
			var mother = document.getElementById("mother").files[0]
			var fathertransfer = document.getElementById("fathertransfer").files[0]
			var mothertransfer = document.getElementById("mothertransfer").files[0]
			var smart = document.getElementById("smart").files[0]
			var self = document.getElementById("self").files[0]
			var academic = document.getElementById("academic").files[0]
			var others = document.getElementById("others").files[0]

			var userid = email
			var emailreg = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/

			if (name == "") {
				document.getElementById("fbname").style.display = "block"
				return false
			} else if (number == "") {
				document.getElementById("fbnumber").style.display = "block"
				return false
			} else if (!emailreg.test(email)) {
				document.getElementById("fbemail").style.display = "block"
				return false
			} else if (photo == undefined) {
				document.getElementById("fbphoto").style.display = "block"
				return false
			} else if (address == undefined) {
				document.getElementById("fbaddress").style.display = "block"
				return false
			} else if (transfer == undefined) {
				document.getElementById("fbtransfer").style.display = "block"
				return false
			} else if (father == undefined) {
				document.getElementById("fbfather").style.display = "block"
				return false
			} else if (mother == undefined) {
				document.getElementById("fbmother").style.display = "block"
				return false
			} else if (fathertransfer == undefined) {
				document.getElementById("fbfathertransfer").style.display = "block"
				return false
			} else if (mothertransfer == undefined) {
				document.getElementById("fbmothertransfer").style.display = "block"
				return false
			} else if (smart == undefined) {
				document.getElementById("fbsmart").style.display = "block"
				return false
			} else if (self == undefined) {
				document.getElementById("fbself").style.display = "block"
				return false
			} else if (academic == undefined) {
				document.getElementById("fbacademic").style.display = "block"
				return false
			}else{
				toastr["info"]("Please Wait", "File Uploading..");
				document.getElementById("submitbtn").innerHTML = " <span class='spinner-border spinner-border-sm mr-2' role='status'style='padding: 7px;' aria-hidden='true'></span>Please Wait..."

				var walletamount = new Promise((resolve, reject) => {
				var wallet = db.collection("users").doc(uemail).collection("wallet").doc(
					uemail)
				wallet.get().then((
					doc) => {
					if (doc.data() != undefined) {
						var useramount = doc.data().amount
						if (useramount < 60) {
							console.log("please add money")
							setTimeout(() => {
								resolve(0)
							})
						} else {
							resolve(1)
						}
					} else {
						console.log("please add money")
						setTimeout(() => {
							resolve(0)
						})
					}
				})
			})
			var walletprice = await walletamount
			var photourl, addressurl, transferurl, fatherurl, motherurl, fathertransferurl, mothertransferurl,
				smarturl, selfurl, academicurl, othersurl
			if (walletprice == 1) {
				var photoref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/photo/' + photo
					.name);
				await photoref.put(photo).then(function (snapshot) {
					//getting url  				
					photoref.getDownloadURL().then(function (url) {
						photourl = url;
						console.log(photourl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var addressref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/address/' + address
					.name);
				await addressref.put(address).then(function (snapshot) {
					//getting url  				
					addressref.getDownloadURL().then(function (url) {
						addressurl = url;
						console.log(addressurl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var transferref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/transfer/' +
					transfer
						.name);
				await transferref.put(transfer).then(function (snapshot) {
					//getting url  				
					transferref.getDownloadURL().then(function (url) {
						transferurl = url;
						console.log(transferurl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var fatherref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/father/' + father
					.name);
				await fatherref.put(father).then(function (snapshot) {
					//getting url  				
					fatherref.getDownloadURL().then(function (url) {
						fatherurl = url;
						console.log(fatherurl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var motherref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/mother/' + mother
					.name);
				await motherref.put(mother).then(function (snapshot) {
					//getting url  				
					motherref.getDownloadURL().then(function (url) {
						motherurl = url;
						console.log(motherurl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var fathertransferref = storageRef.child(userid + "/" + name +
					'/FirstGraduateCertificate/fathertransfer/' + fathertransfer.name);
				await fathertransferref.put(fathertransfer).then(function (snapshot) {
					//getting url  				
					fathertransferref.getDownloadURL().then(function (url) {
						fathertransferurl = url;
						console.log(fathertransferurl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var mothertransferref = storageRef.child(userid + "/" + name +
					'/FirstGraduateCertificate/mothertransfer/' +
					mothertransfer.name);
				await mothertransferref.put(mothertransfer).then(function (snapshot) {
					//getting url  				
					mothertransferref.getDownloadURL().then(function (url) {
						mothertransferurl = url;
						console.log(mothertransferurl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var smartref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/smart/' + smart
					.name);
				await smartref.put(smart).then(function (snapshot) {
					//getting url  				
					smartref.getDownloadURL().then(function (url) {
						smarturl = url;
						console.log(smarturl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var selfref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/self/' + self.name);
				await selfref.put(self).then(function (snapshot) {
					//getting url  				
					selfref.getDownloadURL().then(function (url) {
						selfurl = url;
						console.log(selfurl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				var academicref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/academic/' +
					academic
						.name);
				await academicref.put(academic).then(function (snapshot) {
					//getting url  				
					academicref.getDownloadURL().then(function (url) {
						academicurl = url;
						console.log(academicurl);
					})
						.catch(function (error) {
							console.log("error encountered");
						});
				});
				if (others != undefined) {
					var otherref = storageRef.child(userid + "/" + name + '/FirstGraduateCertificate/other/' + others
						.name);
					await otherref.put(others).then(function (snapshot) {
						//getting url  				
						otherref.getDownloadURL().then(function (url) {
							othersurl = url;
							console.log(othersurl);
						})
							.catch(function (error) {
								console.log("error encountered");
							});
					});
				} else {
					othersurl = "none"
				}
				setTimeout(() => {
					$.ajax({
						method: "POST",
						url: "/certificate/Firstgraduatecertificate",
						data: {
							name: name,
							number: number,
							email: email,
							Certificate: "Firstgraduatecertificate",
							Certificatename: "First Graduate Certificate",
							photo: photourl,
							address: addressurl,
							transfer: transferurl,
							father: fatherurl,
							mother: motherurl,
							fathertransfer: fathertransferurl,
							mothertransfer: mothertransferurl,
							smart: smarturl,
							self: selfurl,
							academic: academicurl,
							others: othersurl,
							uemail:uemail
						},
						success: (res) => {
							if (res.status != undefined) {                                    
                                    var wallet = db.collection("users").doc(uemail).collection("wallet").doc(uemail)
                                    var myamount = wallet.get().then((doc) => {
                                        var useramount = doc.data().amount
                                        wallet.update({
                                            amount: Number(useramount) - Number(60)
                                        }).then(() => {   
											const monthNames = ["January", "February", "March", "April", "May", "June",
                                                "July", "August", "September", "October", "November", "December"
                                            ];
                                            var date = new Date()
                                            var cdate = monthNames[date.getMonth()] + " " + date.getDate() + " " + date.getFullYear() + " " + date.getHours() + ":" + date.getMinutes()                                         
                                            db.collection("users").doc(uemail).collection("wallethistory").doc().set({
                                                amount: 60,
                                                Certificatename: "First Graduate Certificate",
												date:cdate
                                            }).then(() => {
												db.collection("users").doc(uemail).get().then((docss) => {
                                                    db.collection("wallethistory").doc().set({
                                                        amount: 60,
                                                        Certificatename: "First Graduate Certificate",
                                                        date: cdate,
                                                        name: docss.data().uname
                                                    })
                                                })
                                                toastr["success"]("Success", "Certificate Upload Successfully..");//successfully
                                                setTimeout(() => { window.location.reload() }, 2000)
                                            })
                                        })
                                    })
                                }
						}
					})
				}, 3000)

			
			} else {
				toastr["error"]("Low Balance", "Please Add Money..");
			}
		}
		})
	</script>
</body>

<!-- Mirrored from kanakku.dreamguystech.com/template-html/form-basic-inputs.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 02 Feb 2021 23:21:44 GMT -->

</html>